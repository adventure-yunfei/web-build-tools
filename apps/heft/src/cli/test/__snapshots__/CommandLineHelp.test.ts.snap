// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CommandLineHelp prints the global help 1`] = `
"usage: heft [-h] [--unmanaged] [--debug] [--plugin PATH] <command> ...

Heft is a pluggable build system designed for web projects.

Positional arguments:
  <command>
    clean        Clean the project
    build        Build the project.
    start        Run the local server for the current project
    test         Build the project and run tests.

Optional arguments:
  -h, --help     Show this help message and exit.
  --unmanaged    Disables the Heft version selector: When Heft is invoked via 
                 the shell path, normally it will examine the project's 
                 package.json dependencies and try to use the locally 
                 installed version of Heft. Specify \\"--unmanaged\\" to force 
                 the invoked version of Heft to be used. This is useful for 
                 example if you want to test a different version of Heft.
  --debug        Show the full call stack if an error occurs while executing 
                 the tool
  --plugin PATH  Used to specify Heft plugins.

[bold]For detailed help about a specific command, use: heft <command> -h[normal]
"
`;

exports[`CommandLineHelp prints the help for each action: build 1`] = `
"usage: heft build [-h] [-v] [--production] [--locale LOCALE] [-l]
                  [--typescript-max-write-parallelism PARALLEILSM]
                  [--max-old-space-size SIZE] [-w] [--clean]
                  

Optional arguments:
  -h, --help            Show this help message and exit.
  -v, --verbose         If specified, log information useful for debugging.
  --production          If specified, build ship/production output
  --locale LOCALE       Only build the specified locale, if applicable.
  -l, --lite            Perform a minimal build, skipping optional steps like 
                        linting.
  --typescript-max-write-parallelism PARALLEILSM
                        Set this to change the maximum write parallelism. 
                        This parameter overrides what is set in typescript.
                        json. The default is 50.
  --max-old-space-size SIZE
                        Used to specify the max old space size.
  -w, --watch           If provided, run tests in watch mode.
  --clean               If specified, clean the package before building.
"
`;

exports[`CommandLineHelp prints the help for each action: clean 1`] = `
"usage: heft clean [-h] [-v] [--clear-cache]

Optional arguments:
  -h, --help     Show this help message and exit.
  -v, --verbose  If specified, log information useful for debugging.
  --clear-cache  If this flag is provided, the compiler cache will also be 
                 cleared. This isn't dangerous, but may lead to longer 
                 compile times
"
`;

exports[`CommandLineHelp prints the help for each action: start 1`] = `
"usage: heft start [-h] [-v] [--production] [--locale LOCALE] [-l]
                  [--typescript-max-write-parallelism PARALLEILSM]
                  [--max-old-space-size SIZE] [--clean]
                  

Optional arguments:
  -h, --help            Show this help message and exit.
  -v, --verbose         If specified, log information useful for debugging.
  --production          If specified, build ship/production output
  --locale LOCALE       Only build the specified locale, if applicable.
  -l, --lite            Perform a minimal build, skipping optional steps like 
                        linting.
  --typescript-max-write-parallelism PARALLEILSM
                        Set this to change the maximum write parallelism. 
                        This parameter overrides what is set in typescript.
                        json. The default is 50.
  --max-old-space-size SIZE
                        Used to specify the max old space size.
  --clean               If specified, clean the package before starting the 
                        development server.
"
`;

exports[`CommandLineHelp prints the help for each action: test 1`] = `
"usage: heft test [-h] [-v] [--production] [--locale LOCALE] [-l]
                 [--typescript-max-write-parallelism PARALLEILSM]
                 [--max-old-space-size SIZE] [-w] [--clean] [--no-test]
                 [--no-build]
                 

Optional arguments:
  -h, --help            Show this help message and exit.
  -v, --verbose         If specified, log information useful for debugging.
  --production          If specified, build ship/production output
  --locale LOCALE       Only build the specified locale, if applicable.
  -l, --lite            Perform a minimal build, skipping optional steps like 
                        linting.
  --typescript-max-write-parallelism PARALLEILSM
                        Set this to change the maximum write parallelism. 
                        This parameter overrides what is set in typescript.
                        json. The default is 50.
  --max-old-space-size SIZE
                        Used to specify the max old space size.
  -w, --watch           If provided, run tests in watch mode.
  --clean               If specified, clean the package before building.
  --no-test             If specified, run the build without testing.
  --no-build            If provided, only run tests. Do not build first.
"
`;
